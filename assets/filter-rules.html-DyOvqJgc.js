import{_ as t,c as e,a as n,b as a,d as o,e as l,o as c,r as i}from"./app-DKLT9RiB.js";const r={},u={href:"https://dtstack.github.io/dt-react-component/components/filter-rules",target:"_blank",rel:"noopener noreferrer"};function k(d,s){const p=i("ExternalLinkIcon");return c(),e("div",null,[n("p",null,[s[1]||(s[1]=n("code",null,"FilterRules",-1)),s[2]||(s[2]=a(" 且或组件 用于一些需要且或关系数据填入和展示，")),s[3]||(s[3]=n("code",null,"react",-1)),s[4]||(s[4]=a(" 版本组件推荐地址 ")),n("a",u,[s[0]||(s[0]=a("FilterRules")),o(p)])]),s[5]||(s[5]=l(`<h4 id="_1、条件过滤树目前实现的功能点如下" tabindex="-1"><a class="header-anchor" href="#_1、条件过滤树目前实现的功能点如下"><span>1、条件过滤树目前实现的功能点如下</span></a></h4><ul><li>实现 <strong>增加节点</strong>、<strong>删除节点</strong>、<strong>编辑节点</strong></li><li>实现 <strong>表单校验</strong></li><li>实现 <strong>自定义节点内容</strong></li></ul><p><img src="https://s2.loli.net/2024/12/14/d3ry5MYDixnw9cs.jpg" alt="f7baa489-f268-4cfd-82d6-29330e9b8233.jpeg"></p><h4 id="_2、在-components-文件中创建-filterrules-vue-文件" tabindex="-1"><a class="header-anchor" href="#_2、在-components-文件中创建-filterrules-vue-文件"><span>2、在 components 文件中创建 FilterRules.vue 文件</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>div <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;ruleTreeData.currentGroup&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;filter-rules-wrap&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>div</span>
<span class="line">      v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;ruleTreeData.children.length &gt; 1&quot;</span></span>
<span class="line">      <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;[isRootNode ? &#39;rules-line-wrap&#39; : &#39;rules-line-wrap rules-line-left&#39;, disabled ? &#39;rules-line-bottom&#39; : &#39;&#39;]&quot;</span></span>
<span class="line">    <span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;toggle-rules-wrap&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;toggleRules&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;text&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> conditionRelation <span class="token operator">===</span> <span class="token string">&#39;or&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;或&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;且&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon size<span class="token operator">=</span><span class="token string">&quot;12&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;icon&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>DCaret <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>div <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;[isRootNode ? &#39;main&#39; : &#39;main main-border&#39;, mainStyle]&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;(item, index) in ruleTreeData.children&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>el<span class="token operator">-</span>row</span>
<span class="line">          v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;item.type == &#39;condition&#39;&quot;</span></span>
<span class="line">          <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;item.currentGroup&quot;</span></span>
<span class="line">          <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;[ruleTreeData.children.length === 1 ? &#39;child&#39; : &#39;child child-pl&#39;]&quot;</span></span>
<span class="line">        <span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>el<span class="token operator">-</span>form ref<span class="token operator">=</span><span class="token string">&quot;ruleFormRef&quot;</span> <span class="token operator">:</span>model<span class="token operator">=</span><span class="token string">&quot;item&quot;</span> <span class="token operator">:</span>rules<span class="token operator">=</span><span class="token string">&quot;rules&quot;</span> <span class="token operator">:</span>inline<span class="token operator">=</span><span class="token string">&quot;true&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">&quot;&quot;</span> prop<span class="token operator">=</span><span class="token string">&quot;conditionKey&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">              <span class="token operator">&lt;</span>el<span class="token operator">-</span>select</span>
<span class="line">                v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;item.conditionKey&quot;</span></span>
<span class="line">                <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">&quot;disabled&quot;</span></span>
<span class="line">                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;form-item-cell&quot;</span></span>
<span class="line">                placeholder<span class="token operator">=</span><span class="token string">&quot;请选择筛选项&quot;</span></span>
<span class="line">                @change<span class="token operator">=</span><span class="token string">&quot;changeConditionKeySelect(item)&quot;</span></span>
<span class="line">              <span class="token operator">&gt;</span></span>
<span class="line">                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option</span>
<span class="line">                  v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;obj in state.filterItems&quot;</span></span>
<span class="line">                  <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;obj.dictKey&quot;</span></span>
<span class="line">                  <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">&quot;obj.dictName&quot;</span></span>
<span class="line">                  <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">&quot;obj.dictKey&quot;</span></span>
<span class="line">                <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">            <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">&quot;&quot;</span> prop<span class="token operator">=</span><span class="token string">&quot;conditionType&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">              <span class="token operator">&lt;</span>el<span class="token operator">-</span>select</span>
<span class="line">                v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;item.conditionType&quot;</span></span>
<span class="line">                <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">&quot;disabled&quot;</span></span>
<span class="line">                placeholder<span class="token operator">=</span><span class="token string">&quot;运算符&quot;</span></span>
<span class="line">                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;form-item-cell&quot;</span></span>
<span class="line">                @change<span class="token operator">=</span><span class="token string">&quot;changeConditionTypeSelect(item)&quot;</span></span>
<span class="line">              <span class="token operator">&gt;</span></span>
<span class="line">                <span class="token operator">&lt;</span>el<span class="token operator">-</span>option</span>
<span class="line">                  v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;obj in state.operatorList&quot;</span></span>
<span class="line">                  <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;obj.dictKey&quot;</span></span>
<span class="line">                  <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">&quot;obj.dictName&quot;</span></span>
<span class="line">                  <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">&quot;obj.dictKey&quot;</span></span>
<span class="line">                <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">              <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">            <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">&quot;&quot;</span> prop<span class="token operator">=</span><span class="token string">&quot;conditionValue&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;margin-right: 0&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">              <span class="token operator">&lt;</span>el<span class="token operator">-</span>input</span>
<span class="line">                v<span class="token operator">-</span>model<span class="token punctuation">.</span>trim<span class="token operator">=</span><span class="token string">&quot;item.conditionValue&quot;</span></span>
<span class="line">                <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">&quot;disabled&quot;</span></span>
<span class="line">                placeholder<span class="token operator">=</span><span class="token string">&quot;请输入目标值&quot;</span></span>
<span class="line">                <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;form-item-cell&quot;</span></span>
<span class="line">                @keyup<span class="token punctuation">.</span>enter<span class="token operator">=</span><span class="token string">&quot;handleConditionValueBlur(item.conditionValue)&quot;</span></span>
<span class="line">                @blur<span class="token operator">=</span><span class="token string">&quot;handleConditionValueBlur(item.conditionValue)&quot;</span></span>
<span class="line">              <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;item.conditionValue&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;form-item-cell&quot;</span> placeholder<span class="token operator">=</span><span class="token string">&quot;请选择目标值&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">&gt;</span> <span class="token operator">--</span><span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;isRootNode &amp;&amp; ruleTreeData.children.length === 1&quot;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span> <span class="token operator">--</span><span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;!disabled&quot;</span> color<span class="token operator">=</span><span class="token string">&quot;rgba(32, 36, 44, 1)&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;remove-icon&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;removeRuleRow(index)&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span>CircleCloseFilled <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>el<span class="token operator">-</span>row</span>
<span class="line">          v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;item.type == &#39;group&#39; &amp;&amp; item.children.length &gt; 0&quot;</span></span>
<span class="line">          <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;item.currentGroup&quot;</span></span>
<span class="line">          <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;[ruleTreeData.children.length === 1 ? &#39;child&#39; : &#39;child child-pl&#39;]&quot;</span></span>
<span class="line">        <span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>filter<span class="token operator">-</span>rules</span>
<span class="line">            ref<span class="token operator">=</span><span class="token string">&quot;filterRulesRef&quot;</span></span>
<span class="line">            v<span class="token operator">-</span>model<span class="token operator">:</span>modelValue<span class="token operator">=</span><span class="token string">&quot;ruleTreeData.children[index]&quot;</span></span>
<span class="line">            <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">&quot;disabled&quot;</span></span>
<span class="line">            <span class="token operator">:</span>filterItemsArray<span class="token operator">=</span><span class="token string">&quot;state.filterItems&quot;</span></span>
<span class="line">            <span class="token operator">:</span>operatorArray<span class="token operator">=</span><span class="token string">&quot;state.operatorList&quot;</span></span>
<span class="line">            @on<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">&quot;() =&gt; emits(&#39;on-change&#39;)&quot;</span></span>
<span class="line">            @on<span class="token operator">-</span>remove<span class="token operator">=</span><span class="token string">&quot;handleRemoveBack&quot;</span></span>
<span class="line">          <span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">-</span>rules<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">      <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;!disabled&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;add-wrap&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;left&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">&gt;</span><span class="token operator">&lt;</span>CirclePlusFilled <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;text&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;addRuleRow&quot;</span><span class="token operator">&gt;</span> 添加筛选条件 <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>el<span class="token operator">-</span>popover ref<span class="token operator">=</span><span class="token string">&quot;popverRef&quot;</span> trigger<span class="token operator">=</span><span class="token string">&quot;hover&quot;</span> <span class="token operator">:</span>width<span class="token operator">=</span><span class="token string">&quot;126&quot;</span> placement<span class="token operator">=</span><span class="token string">&quot;right&quot;</span> <span class="token operator">:</span>teleported<span class="token operator">=</span><span class="token string">&quot;false&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;pointer&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;addRuleGroup&quot;</span><span class="token operator">&gt;</span>添加筛选组条件<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span>template #reference<span class="token operator">&gt;</span></span>
<span class="line">              <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">&gt;</span><span class="token operator">&lt;</span>CaretBottom <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>popover<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">&lt;</span>span v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;isRootNode&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;clear-filter&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;clearAllFilter&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon<span class="token operator">&gt;</span><span class="token operator">&lt;</span>Delete <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>清空全部条件<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">    <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;!disabled&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>el<span class="token operator">-</span>icon v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;!isRootNode&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;remove-group-icon pointer&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;removeRuleGuop&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>CircleCloseFilled <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>icon<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>script lang<span class="token operator">=</span><span class="token string">&quot;ts&quot;</span> setup<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> isEmpty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash-es&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> v4 <span class="token keyword">as</span> uuidv4 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;uuid&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> FormInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> dictunPageList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">defineOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;FilterRules&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> emits <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;on-remove&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;on-change&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;on-clear&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">modelValue</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token literal-property property">filterItemsArray</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> Array<span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token literal-property property">operatorArray</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> Array<span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> filterRulesRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> ruleFormRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>FormInstance<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> ruleTreeData <span class="token operator">=</span> ref<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> conditionRelation <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> isRootNode <span class="token operator">=</span> ref<span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> parrentGroup <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> popverRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> rules <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">conditionKey</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;请输入&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">&#39;blur&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">conditionType</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;请输入&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">&#39;blur&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">isFilterLoading</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">isOperatorLoading</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">filterItems</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">operatorList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> mainStyle <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>isRootNode<span class="token punctuation">.</span>value <span class="token operator">&amp;&amp;</span> ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token string">&#39;main-pl&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">watch</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>modelValue<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">setDefaultData</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">initOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">initOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>filterItemsArray<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    state<span class="token punctuation">.</span>filterItems <span class="token operator">=</span> props<span class="token punctuation">.</span>filterItemsArray<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">queryFilterItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>operatorArray<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    state<span class="token punctuation">.</span>operatorList <span class="token operator">=</span> props<span class="token punctuation">.</span>operatorArray<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">queryOperator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">queryFilterItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    state<span class="token punctuation">.</span>isFilterLoading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">dictunPageList</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">parentDictCode</span><span class="token operator">:</span> <span class="token string">&#39;SN53WpEZsabcF9Eo1L8_S&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    state<span class="token punctuation">.</span>isFilterLoading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">&#39;200&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      state<span class="token punctuation">.</span>filterItems <span class="token operator">=</span> data<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    state<span class="token punctuation">.</span>isFilterLoading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">queryOperator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    state<span class="token punctuation">.</span>isOperatorLoading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">dictunPageList</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">parentDictCode</span><span class="token operator">:</span> <span class="token string">&#39;SN53WpEZsabcdF9Eo1L8_S&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    state<span class="token punctuation">.</span>isOperatorLoading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">&#39;200&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      state<span class="token punctuation">.</span>operatorList <span class="token operator">=</span> data<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    state<span class="token punctuation">.</span>isOperatorLoading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">setDefaultData</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">newVal</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token literal-property property">currentGroup</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token function">uuidv4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    isRootNode<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    parrentGroup<span class="token punctuation">.</span>value <span class="token operator">=</span> currentGroup<span class="token punctuation">;</span></span>
<span class="line">    conditionRelation<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;or&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    ruleTreeData<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">currentGroup</span><span class="token operator">:</span> parrentGroup<span class="token punctuation">.</span>value<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">conditionRelation</span><span class="token operator">:</span> conditionRelation<span class="token punctuation">.</span>value<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">currentGroup</span><span class="token operator">:</span> <span class="token function">uuidv4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">parrentGroup</span><span class="token operator">:</span> parrentGroup<span class="token punctuation">.</span>value<span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">conditionKey</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">conditionKeyName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">conditionType</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">conditionTypeName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">conditionValue</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;condition&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// eslint-disable-next-line no-prototype-builtins</span></span>
<span class="line">    isRootNode<span class="token punctuation">.</span>value <span class="token operator">=</span> newVal<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;parrentGroup&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    parrentGroup<span class="token punctuation">.</span>value <span class="token operator">=</span> newVal<span class="token punctuation">.</span>currentGroup<span class="token punctuation">;</span></span>
<span class="line">    ruleTreeData<span class="token punctuation">.</span>value <span class="token operator">=</span> newVal<span class="token punctuation">;</span></span>
<span class="line">    conditionRelation<span class="token punctuation">.</span>value <span class="token operator">=</span> ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>conditionRelation<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">addRuleRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">currentGroup</span><span class="token operator">:</span> <span class="token function">uuidv4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">parrentGroup</span><span class="token operator">:</span> parrentGroup<span class="token punctuation">.</span>value<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">conditionKey</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">conditionKeyName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">conditionType</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">conditionTypeName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">conditionValue</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;condition&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">removeRuleRow</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">index</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;on-change&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;on-remove&#39;</span><span class="token punctuation">,</span> ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">addRuleGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  popverRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> currentGroup <span class="token operator">=</span> <span class="token function">uuidv4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">conditionRelation</span><span class="token operator">:</span> <span class="token string">&#39;or&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;group&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    currentGroup<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">parrentGroup</span><span class="token operator">:</span> parrentGroup<span class="token punctuation">.</span>value<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">currentGroup</span><span class="token operator">:</span> <span class="token function">uuidv4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">parrentGroup</span><span class="token operator">:</span> currentGroup<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">conditionKey</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">conditionKeyName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">conditionType</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">conditionTypeName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">conditionValue</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;condition&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">removeRuleGuop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;on-remove&#39;</span><span class="token punctuation">,</span> ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">handleRemoveBack</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> index <span class="token operator">=</span> ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">v</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>currentGroup <span class="token operator">===</span> data<span class="token punctuation">.</span>currentGroup<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;on-change&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">toggleRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>disabled<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  conditionRelation<span class="token punctuation">.</span>value <span class="token operator">=</span> conditionRelation<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;or&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;and&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;or&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  ruleTreeData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>conditionRelation <span class="token operator">=</span> conditionRelation<span class="token punctuation">.</span>value<span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;on-change&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">clearAllFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;on-clear&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">changeConditionKeySelect</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> item <span class="token operator">=</span> state<span class="token punctuation">.</span>filterItems<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">v</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>dictKey <span class="token operator">===</span> data<span class="token punctuation">[</span><span class="token string">&#39;conditionKey&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span> data<span class="token punctuation">[</span><span class="token string">&#39;conditionKeyName&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span>dictName<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>conditionType<span class="token punctuation">)</span> <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;on-change&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">changeConditionTypeSelect</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> item <span class="token operator">=</span> state<span class="token punctuation">.</span>operatorList<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">v</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>dictKey <span class="token operator">===</span> data<span class="token punctuation">[</span><span class="token string">&#39;conditionType&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span> data<span class="token punctuation">[</span><span class="token string">&#39;conditionTypeName&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span>dictName<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>conditionKey<span class="token punctuation">)</span> <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;on-change&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">handleConditionValueBlur</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">val</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token function">emits</span><span class="token punctuation">(</span><span class="token string">&#39;on-change&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> <span class="token literal-property property">formList</span><span class="token operator">:</span> any <span class="token operator">=</span> ruleFormRef<span class="token punctuation">.</span>value<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> <span class="token literal-property property">rulesRefList</span><span class="token operator">:</span> any <span class="token operator">=</span> filterRulesRef<span class="token punctuation">.</span>value<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">let</span> <span class="token literal-property property">list</span><span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>formList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span></span>
<span class="line">      formList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">item</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> valid <span class="token operator">=</span> <span class="token keyword">await</span> item<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>valid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>formList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 单个表单项</span></span>
<span class="line">    <span class="token keyword">const</span> valid <span class="token operator">=</span> <span class="token keyword">await</span> formList<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>valid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 验证rulesRefList中的每个项;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>rulesRefList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span></span>
<span class="line">      rulesRefList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">item</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> valid <span class="token operator">=</span> <span class="token keyword">await</span> item<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>valid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> list<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">v</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>v<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">defineExpose</span><span class="token punctuation">(</span><span class="token punctuation">{</span> validate <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>style scoped lang<span class="token operator">=</span><span class="token string">&quot;less&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">.</span>filter<span class="token operator">-</span>rules<span class="token operator">-</span>wrap <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span></span>
<span class="line">  min<span class="token operator">-</span>width<span class="token operator">:</span> 520px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>rules<span class="token operator">-</span>line<span class="token operator">-</span>wrap <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">top</span><span class="token operator">:</span> 30px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">bottom</span><span class="token operator">:</span> 82px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">left</span><span class="token operator">:</span> 8px<span class="token punctuation">;</span></span>
<span class="line">  z<span class="token operator">-</span>index<span class="token operator">:</span> <span class="token number">999</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">width</span><span class="token operator">:</span> 4px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">border</span><span class="token operator">:</span> 1px solid #e5e6eb<span class="token punctuation">;</span></span>
<span class="line">  border<span class="token operator">-</span>right<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  border<span class="token operator">-</span>radius<span class="token operator">:</span> 2px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span></span>
<span class="line">  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span></span>
<span class="line">  justify<span class="token operator">-</span>content<span class="token operator">:</span> center<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">.</span>toggle<span class="token operator">-</span>rules<span class="token operator">-</span>wrap <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span></span>
<span class="line">    align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">width</span><span class="token operator">:</span> 24px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">height</span><span class="token operator">:</span> 24px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">background</span><span class="token operator">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line">    border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span></span>
<span class="line">    font<span class="token operator">-</span>size<span class="token operator">:</span> 12px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">cursor</span><span class="token operator">:</span> pointer<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">.</span>text <span class="token punctuation">{</span></span>
<span class="line">      margin<span class="token operator">-</span>right<span class="token operator">:</span> 2px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">.</span>icon <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span></span>
<span class="line">      <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token operator">-</span>1px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>rules<span class="token operator">-</span>line<span class="token operator">-</span>left <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">left</span><span class="token operator">:</span> 20px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>rules<span class="token operator">-</span>line<span class="token operator">-</span>bottom <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">bottom</span><span class="token operator">:</span> 32px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>main <span class="token punctuation">{</span></span>
<span class="line">  min<span class="token operator">-</span>width<span class="token operator">:</span> 594px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">width</span><span class="token operator">:</span> max<span class="token operator">-</span>content<span class="token punctuation">;</span></span>
<span class="line">  min<span class="token operator">-</span>height<span class="token operator">:</span> 70px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px 10px 10px <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>main<span class="token operator">-</span>border <span class="token punctuation">{</span></span>
<span class="line">  padding<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span></span>
<span class="line">  padding<span class="token operator">-</span>right<span class="token operator">:</span> 30px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">border</span><span class="token operator">:</span> 1px solid #e5e6eb<span class="token punctuation">;</span></span>
<span class="line">  border<span class="token operator">-</span>radius<span class="token operator">:</span> 6px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>main<span class="token operator">-</span>pl <span class="token punctuation">{</span></span>
<span class="line">  padding<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>child <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span></span>
<span class="line">  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span></span>
<span class="line">  flex<span class="token operator">-</span>wrap<span class="token operator">:</span> nowrap<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">width</span><span class="token operator">:</span> max<span class="token operator">-</span>content<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">padding</span><span class="token operator">:</span> 10px <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>child<span class="token operator">-</span>pl <span class="token punctuation">{</span></span>
<span class="line">  padding<span class="token operator">-</span>left<span class="token operator">:</span> 20px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>add<span class="token operator">-</span>wrap <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span></span>
<span class="line">  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span></span>
<span class="line">  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span></span>
<span class="line">  margin<span class="token operator">-</span>top<span class="token operator">:</span> 20px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">color</span><span class="token operator">:</span> #0088ff<span class="token punctuation">;</span></span>
<span class="line">  font<span class="token operator">-</span>size<span class="token operator">:</span> 12px<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">.</span>left <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span></span>
<span class="line">    justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span></span>
<span class="line">    align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">.</span>text <span class="token punctuation">{</span></span>
<span class="line">    margin<span class="token operator">-</span>left<span class="token operator">:</span> 2px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">cursor</span><span class="token operator">:</span> pointer<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">.</span>clear<span class="token operator">-</span>filter <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span></span>
<span class="line">    align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">color</span><span class="token operator">:</span> #1d2129<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">cursor</span><span class="token operator">:</span> pointer<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>remove<span class="token operator">-</span>group<span class="token operator">-</span>icon <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">right</span><span class="token operator">:</span> <span class="token operator">-</span>24px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>pointer <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">cursor</span><span class="token operator">:</span> pointer<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>remove<span class="token operator">-</span>icon <span class="token punctuation">{</span></span>
<span class="line">  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token literal-property property">cursor</span><span class="token operator">:</span> pointer<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span>cell <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">width</span><span class="token operator">:</span> 150px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span>cell<span class="token operator">:</span>nth<span class="token operator">-</span><span class="token function">child</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">2n</span> <span class="token operator">+</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span>cell<span class="token operator">:</span>nth<span class="token operator">-</span><span class="token function">child</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">.</span>form<span class="token operator">-</span>item<span class="token operator">-</span>cell<span class="token operator">:</span>nth<span class="token operator">-</span><span class="token function">child</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">3</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  margin<span class="token operator">-</span>left<span class="token operator">:</span> 10px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、在父组件中按下面方式调用" tabindex="-1"><a class="header-anchor" href="#_3、在父组件中按下面方式调用"><span>3、在父组件中按下面方式调用</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>el<span class="token operator">-</span>form <span class="token operator">:</span>model<span class="token operator">=</span><span class="token string">&quot;state.formState&quot;</span> label<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">&quot;top&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">&quot;设置筛选条件&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>el<span class="token operator">-</span>scrollbar max<span class="token operator">-</span>height<span class="token operator">=</span><span class="token string">&quot;500&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;flex: 1&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;pl-[2px]&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>filterRules</span>
<span class="line">            v<span class="token operator">-</span>model<span class="token operator">:</span>modelValue<span class="token operator">=</span><span class="token string">&quot;state.formState.filterRules&quot;</span></span>
<span class="line">            @on<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">&quot;handleFilterRulesChange&quot;</span></span>
<span class="line">          <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>scrollbar<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>script lang<span class="token operator">=</span><span class="token string">&quot;ts&quot;</span> setup<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">import</span> filterRules <span class="token keyword">from</span> <span class="token string">&#39;@/components/filterRules.vue&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">formState</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">filterRules</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7))])}const m=t(r,[["render",k],["__file","filter-rules.html.vue"]]),b=JSON.parse('{"path":"/blogs/vue/filter-rules.html","title":"Vue FilterRules 且或组件，支持自定条件查询","lang":"en-US","frontmatter":{"title":"Vue FilterRules 且或组件，支持自定条件查询","date":"2024-8-18","tags":["vue"],"categories":["vue"]},"headers":[],"git":{"createdTime":1734166176000,"updatedTime":1735390703000,"contributors":[{"name":"motioliang","email":"1398814514@qq.com","commits":1}]},"filePathRelative":"blogs/vue/filter-rules.md"}');export{m as comp,b as data};
