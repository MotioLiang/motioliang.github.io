import{_ as p,c as t,e,a as s,b as l,d as c,o as i,r as o}from"./app-DKLT9RiB.js";const u={},r={href:"https://www.ddhigh.com/2020/03/18/webpack-plugin-development.html",target:"_blank",rel:"noopener noreferrer"};function k(d,n){const a=o("ExternalLinkIcon");return i(),t("div",null,[n[1]||(n[1]=e(`<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>Webpack 通过 Loader 完成模块的转换工作，让“一切皆模块”成为可能。Plugin 机制则让其更加灵活，可以在 Webpack 生命周期中调用钩子完成各种任务，包括修改输出资源、输出目录等等。</p></div><h2 id="构建流程" tabindex="-1"><a class="header-anchor" href="#构建流程"><span>构建流程</span></a></h2><p>在编写插件之前，还需要了解一下 Webpack 的构建流程，以便在合适的时机插入合适的插件逻辑。Webpack 的基本构建流程如下：</p><ol><li>校验配置文件</li><li>生成 Compiler 对象</li><li>初始化默认插件</li><li>run/watch：如果运行在 watch 模式则执行 watch 方法，否则执行 run 方法</li><li>compilation：创建 Compilation 对象回调 compilation 相关钩子</li><li>emit：文件内容准备完成，准备生成文件，这是最后一次修改最终文件的机会</li><li>afterEmit：文件已经写入磁盘完成</li><li>done：完成编译</li></ol><h2 id="插件示例" tabindex="-1"><a class="header-anchor" href="#插件示例"><span>插件示例</span></a></h2><p>一个典型的 Webpack 插件代码如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 插件代码</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyWebpackPlugin</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 在emit阶段插入钩子函数</span></span>
<span class="line">        compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&#39;MyWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token parameter">compilation</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> MyWebpackPlugin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来需要在 webpack.config.js 中引入这个插件。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token comment">// 传入插件实例</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">MyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">param</span><span class="token operator">:</span> <span class="token string">&#39;paramValue&#39;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Webpack 在启动时会实例化插件对象，在初始化 compiler 对象之后会调用插件实例的 apply 方法，传入 compiler 对象，插件实例在 apply 方法中会注册感兴趣的钩子，Webpack 在执行过程中会根据构建阶段回调相应的钩子。</p><h2 id="compiler-compilation-对象" tabindex="-1"><a class="header-anchor" href="#compiler-compilation-对象"><span>Compiler &amp;&amp; Compilation 对象</span></a></h2><p>在编写 Webpack 插件过程中，最常用也是最主要的两个对象就是 Webpack 提供的 Compiler 和 Compilation，Plugin 通过访问 Compiler 和 Compilation 对象来完成工作。</p><ul><li>Compiler 对象包含了当前运行 Webpack 的配置，包括 entry、output、loaders 等配置，这个对象在启动 Webpack 时被实例化，而且是全局唯一的。Plugin 可以通过该对象获取到 Webpack 的配置信息进行处理。</li><li>Compilation 对象可以理解编译对象，包含了模块、依赖、文件等信息。在开发模式下运行 Webpack 时，每修改一次文件都会产生一个新的 Compilation 对象，Plugin 可以访问到本次编译过程中的模块、依赖、文件内容等信息。</li></ul><h3 id="常见钩子" tabindex="-1"><a class="header-anchor" href="#常见钩子"><span>常见钩子</span></a></h3><p>Webpack 会根据执行流程来回调对应的钩子，下面我们来看看都有哪些常见钩子，这些钩子支持的 tap 操作是什么。</p><table><thead><tr><th style="text-align:left;">钩子</th><th style="text-align:left;">说明</th><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;">afterPlugins</td><td style="text-align:left;">启动一次新的编译</td><td style="text-align:left;">compiler</td><td style="text-align:left;">同步</td></tr><tr><td style="text-align:left;">compile</td><td style="text-align:left;">创建 compilation 对象之前</td><td style="text-align:left;">compilationParams</td><td style="text-align:left;">同步</td></tr><tr><td style="text-align:left;">compilation</td><td style="text-align:left;">compilation 对象创建完成</td><td style="text-align:left;">compilation</td><td style="text-align:left;">同步</td></tr><tr><td style="text-align:left;">emit</td><td style="text-align:left;">资源生成完成，输出之前</td><td style="text-align:left;">compilation</td><td style="text-align:left;">异步</td></tr><tr><td style="text-align:left;">afterEmit</td><td style="text-align:left;">资源输出到目录完成</td><td style="text-align:left;">compilation</td><td style="text-align:left;">异步</td></tr><tr><td style="text-align:left;">done</td><td style="text-align:left;">完成编译</td><td style="text-align:left;">stats</td><td style="text-align:left;">同步</td></tr></tbody></table><h2 id="tapable" tabindex="-1"><a class="header-anchor" href="#tapable"><span>Tapable</span></a></h2><p>Tapable 是 Webpack 的一个核心工具，Webpack 中许多对象扩展自 Tapable 类。Tapable 类暴露了 tap、tapAsync 和 tapPromise 方法，可以根据钩子的同步/异步方式来选择一个函数注入逻辑。</p><ul><li>tap 同步钩子</li><li>tapAsync 异步钩子，通过 callback 回调告诉 Webpack 异步执行完毕</li><li>tapPromise 异步钩子，返回一个 Promise 告诉 Webpack 异步执行完毕</li></ul><h3 id="tap" tabindex="-1"><a class="header-anchor" href="#tap"><span>tap</span></a></h3><p>tap 是一个同步钩子，同步钩子在使用时不可以包含异步调用，因为函数返回时异步逻辑有可能未执行完毕导致问题。</p><p>下面一个在 compile 阶段插入同步钩子的示例。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>compile<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&#39;MyWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token parameter">params</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;我是同步钩子&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tapasync" tabindex="-1"><a class="header-anchor" href="#tapasync"><span>tapAsync</span></a></h3><p>tapAsync 是一个异步钩子，我们可以通过 callback 告知 Webpack 异步逻辑执行完毕。</p><p>下面是一个在 emit 阶段的示例，在 1 秒后打印文件列表。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span><span class="token string">&#39;MyWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;文件列表&#39;</span><span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>compilation<span class="token punctuation">.</span>assets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tappromise" tabindex="-1"><a class="header-anchor" href="#tappromise"><span>tapPromise</span></a></h3><p>tapPromise 也是也是异步钩子，和 tapAsync 的区别在于 tapPromise 是通过返回 Promise 来告知 Webpack 异步逻辑执行完毕。</p><p>下面是一个将生成结果上传到 CDN 的示例。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>afterEmit<span class="token punctuation">.</span><span class="token function">tapPromise</span><span class="token punctuation">(</span><span class="token string">&#39;MyWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token parameter">compilation</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> filelist <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>compilation<span class="token punctuation">.</span>assets<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">uploadToCDN</span><span class="token punctuation">(</span>filelist<span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">return</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>apply 方法中插入钩子的一般形式如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">compileer<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>阶段<span class="token punctuation">.</span><span class="token function">tap函数</span><span class="token punctuation">(</span><span class="token string">&#39;插件名称&#39;</span><span class="token punctuation">,</span> <span class="token parameter">阶段回调参数</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="常用-api" tabindex="-1"><a class="header-anchor" href="#常用-api"><span>常用 API</span></a></h2><h3 id="读取输出资源、模块及依赖" tabindex="-1"><a class="header-anchor" href="#读取输出资源、模块及依赖"><span>读取输出资源、模块及依赖</span></a></h3><p>在 emit 阶段，我们可以读取最终需要输出的资源、chunk、模块和对应的依赖，如果有需要还可以更改输出资源。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span><span class="token string">&#39;MyWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// compilation.chunks存放了代码块列表</span></span>
<span class="line">    compilation<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">chunk</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">     <span class="token comment">// chunk包含多个模块，通过chunk.modulesIterable可以遍历模块列表</span></span>
<span class="line">			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> module <span class="token keyword">of</span> chunk<span class="token punctuation">.</span>modulesIterable<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// module包含多个依赖，通过module.dependencies进行遍历</span></span>
<span class="line">      	module<span class="token punctuation">.</span>dependencies<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">dependency</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dependency<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改输出资源" tabindex="-1"><a class="header-anchor" href="#修改输出资源"><span>修改输出资源</span></a></h3><p>通过操作 compilation.assets 对象，我们可以添加、删除、更改最终输出的资源。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span><span class="token string">&#39;MyWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 修改或添加资源</span></span>
<span class="line">    compilation<span class="token punctuation">.</span>assets<span class="token punctuation">[</span><span class="token string">&#39;main.js&#39;</span><span class="token punctuation">]</span>  <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;modified content&#39;</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 删除资源</span></span>
<span class="line">    <span class="token keyword">delete</span> compilation<span class="token punctuation">.</span>assets<span class="token punctuation">[</span><span class="token string">&#39;main.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>assets 对象需要定义 source 和 size 方法，source 方法返回资源的内容，支持字符串和 Node.js 的 Buffer，size 返回文件的大小字节数。</p><h2 id="插件编写实例" tabindex="-1"><a class="header-anchor" href="#插件编写实例"><span>插件编写实例</span></a></h2><p>接下来我们开始编写自定义插件，所有插件使用的示例项目如下(需要安装 webpack 和 webpack-cli)：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">|----src</span>
<span class="line">		|----main.js</span>
<span class="line">|----plugins</span>
<span class="line">		|----my-webpack-plugin.js</span>
<span class="line">|----package.json</span>
<span class="line">|----webpack.config.js</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相关文件的内容如下:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// src/main.js</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// package.json</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span><span class="token string">&quot;webpack&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> MyWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;my-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// webpack.config.js</span></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">entry</span><span class="token operator">:</span><span class="token string">&#39;./src/main&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;build&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">filename</span><span class="token operator">:</span><span class="token string">&#39;[name].js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">MyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成清单文件" tabindex="-1"><a class="header-anchor" href="#生成清单文件"><span>生成清单文件</span></a></h3><p>通过在 emit 阶段操作 compilation.assets 实现。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MyWebpackPlugin</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>emit<span class="token punctuation">.</span><span class="token function">tapAsync</span><span class="token punctuation">(</span><span class="token string">&#39;MyWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">const</span> manifest <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> name <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>compilation<span class="token punctuation">.</span>assets<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                manifest<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> compilation<span class="token punctuation">.</span>assets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">// 将生成文件的文件名和大小写入manifest对象</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            compilation<span class="token punctuation">.</span>assets<span class="token punctuation">[</span><span class="token string">&#39;manifest.json&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>manifest<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length</span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> MyWebpackPlugin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>构建完成后会在 build 目录添加 manifest.json，内容如下：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span> <span class="token property">&quot;main.js&quot;</span><span class="token operator">:</span> <span class="token number">956</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="构建结果上传到七牛" tabindex="-1"><a class="header-anchor" href="#构建结果上传到七牛"><span>构建结果上传到七牛</span></a></h3><p>在实际开发中，资源文件构建完成后一般会同步到 CDN，最终前端界面使用的是 CDN 服务器上的静态资源。</p><p>下面我们编写一个 Webpack 插件，文件构建完成后上传的七牛 CDN。</p><p>我们的插件依赖 qiniu，因此需要额外安装 qiniu 模块</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> qiniu --save-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>七牛的 Node.js SDK 文档地址如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">https://developer.qiniu.com/kodo/sdk/1289/nodejs</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>开始编写插件代码：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> qiniu <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;qiniu&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyWebpackPlugin</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 七牛SDK mac对象</span></span>
<span class="line">    mac <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 读取传入选项</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">// 检查选项中的参数</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkQiniuConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">// 初始化七牛mac对象</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>mac <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">qiniu<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>digest<span class="token punctuation">.</span>Mac</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>qiniu<span class="token punctuation">.</span>accessKey<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>qiniu<span class="token punctuation">.</span>secretKey<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">checkQiniuConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 配置未传qiniu，读取环境变量中的配置</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>qiniu<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>qiniu <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">accessKey</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">QINIU_ACCESS_KEY</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">secretKey</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">QINIU_SECRET_KEY</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">bucket</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">QINIU_BUCKET</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">keyPrefix</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">QINIU_KEY_PREFIX</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">const</span> qiniu <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>qiniu</span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>qiniu<span class="token punctuation">.</span>accessKey <span class="token operator">||</span> <span class="token operator">!</span>qiniu<span class="token punctuation">.</span>secretKey <span class="token operator">||</span> <span class="token operator">!</span>qiniu<span class="token punctuation">.</span>bucket<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;invalid qiniu config&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>afterEmit<span class="token punctuation">.</span><span class="token function">tapPromise</span><span class="token punctuation">(</span><span class="token string">&#39;MyWebpackPlugin&#39;</span><span class="token punctuation">,</span> <span class="token parameter">compilation</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 总上传数量</span></span>
<span class="line">                <span class="token keyword">const</span> uploadCount <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>compilation<span class="token punctuation">.</span>assets<span class="token punctuation">)</span><span class="token punctuation">.</span>length</span>
<span class="line">                <span class="token comment">// 已上传数量</span></span>
<span class="line">                <span class="token keyword">let</span> currentUploadedCount <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">                <span class="token comment">// 七牛SDK相关参数</span></span>
<span class="line">                <span class="token keyword">const</span> putPolicy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">qiniu<span class="token punctuation">.</span>rs<span class="token punctuation">.</span>PutPolicy</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">scope</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>qiniu<span class="token punctuation">.</span>bucket <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">const</span> uploadToken <span class="token operator">=</span> putPolicy<span class="token punctuation">.</span><span class="token function">uploadToken</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mac<span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">qiniu<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                config<span class="token punctuation">.</span>zone <span class="token operator">=</span> qiniu<span class="token punctuation">.</span>zone<span class="token punctuation">.</span>Zone_z1</span>
<span class="line">                <span class="token keyword">const</span> formUploader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">qiniu<span class="token punctuation">.</span>form_up<span class="token punctuation">.</span>FormUploader</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">const</span> putExtra <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">qiniu<span class="token punctuation">.</span>form_up<span class="token punctuation">.</span>PutExtra</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">// 因为是批量上传，需要在最后将错误对象回调</span></span>
<span class="line">                <span class="token keyword">let</span> globalError <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line"></span>
<span class="line">                <span class="token comment">// 遍历编译资源文件</span></span>
<span class="line">                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> filename <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>compilation<span class="token punctuation">.</span>assets<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">// 开始上传</span></span>
<span class="line">                    formUploader<span class="token punctuation">.</span><span class="token function">putFile</span><span class="token punctuation">(</span></span>
<span class="line">                        uploadToken<span class="token punctuation">,</span></span>
<span class="line">                        <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>qiniu<span class="token punctuation">.</span>keyPrefix <span class="token operator">+</span> filename<span class="token punctuation">,</span></span>
<span class="line">                        path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>compilation<span class="token punctuation">.</span>outputOptions<span class="token punctuation">.</span>path<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        putExtra<span class="token punctuation">,</span></span>
<span class="line">                        <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">uploade </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> result: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;Success&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">                            currentUploadedCount<span class="token operator">++</span></span>
<span class="line">                            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                                globalError <span class="token operator">=</span> err</span>
<span class="line">                            <span class="token punctuation">}</span></span>
<span class="line">                            <span class="token keyword">if</span> <span class="token punctuation">(</span>currentUploadedCount <span class="token operator">===</span> uploadCount<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                                globalError <span class="token operator">?</span> <span class="token function">reject</span><span class="token punctuation">(</span>globalError<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                            <span class="token punctuation">}</span></span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> MyWebpackPlugin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Webpack 中需要传递给该插件传递相关配置：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/index&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;build&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;[name].js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">publicPath</span><span class="token operator">:</span> <span class="token string">&#39;CDN域名&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">CleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">QiniuWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">qiniu</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">accessKey</span><span class="token operator">:</span> <span class="token string">&#39;七牛AccessKey&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">secretKey</span><span class="token operator">:</span> <span class="token string">&#39;七牛SecretKey&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">bucket</span><span class="token operator">:</span> <span class="token string">&#39;static&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">keyPrefix</span><span class="token operator">:</span> <span class="token string">&#39;webpack-inaction/demo1/&#39;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译完成后资源会自动上传到七牛 CDN，这样前端只用交付 index.html 即可。</p>`,63)),s("p",null,[s("a",r,[n[0]||(n[0]=l("链接")),c(a)])])])}const v=p(u,[["render",k],["__file","create-plugin.html.vue"]]),b=JSON.parse('{"path":"/blogs/webpack/create-plugin.html","title":"Webpack4—编写自定义插件","lang":"en-US","frontmatter":{"title":"Webpack4—编写自定义插件","date":"2021-08-29T00:00:00.000Z","tags":["webpack"],"categories":["webpack"]},"headers":[{"level":2,"title":"构建流程","slug":"构建流程","link":"#构建流程","children":[]},{"level":2,"title":"插件示例","slug":"插件示例","link":"#插件示例","children":[]},{"level":2,"title":"Compiler && Compilation 对象","slug":"compiler-compilation-对象","link":"#compiler-compilation-对象","children":[{"level":3,"title":"常见钩子","slug":"常见钩子","link":"#常见钩子","children":[]}]},{"level":2,"title":"Tapable","slug":"tapable","link":"#tapable","children":[{"level":3,"title":"tap","slug":"tap","link":"#tap","children":[]},{"level":3,"title":"tapAsync","slug":"tapasync","link":"#tapasync","children":[]},{"level":3,"title":"tapPromise","slug":"tappromise","link":"#tappromise","children":[]}]},{"level":2,"title":"常用 API","slug":"常用-api","link":"#常用-api","children":[{"level":3,"title":"读取输出资源、模块及依赖","slug":"读取输出资源、模块及依赖","link":"#读取输出资源、模块及依赖","children":[]},{"level":3,"title":"修改输出资源","slug":"修改输出资源","link":"#修改输出资源","children":[]}]},{"level":2,"title":"插件编写实例","slug":"插件编写实例","link":"#插件编写实例","children":[{"level":3,"title":"生成清单文件","slug":"生成清单文件","link":"#生成清单文件","children":[]},{"level":3,"title":"构建结果上传到七牛","slug":"构建结果上传到七牛","link":"#构建结果上传到七牛","children":[]}]}],"git":{"createdTime":1639637702000,"updatedTime":1639637702000,"contributors":[{"name":"王浩亮","email":"wanghaoliang@epatient.cn","commits":1}]},"filePathRelative":"blogs/webpack/create-plugin.md"}');export{v as comp,b as data};
